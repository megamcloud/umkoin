version: 2.1

jobs:

  Setup_Build_Environment:
    docker:
      - image: umkoin/build-docker-primary:0.0.1
    working_directory: ~/umkoin
    steps:
      - restore_cache:
          keys:
            - CodeBase
      - checkout
      - persist_to_workspace:
          root: ~/umkoin
          paths:
            - .
      - save_cache:
          key: CodeBase
          paths:
            - .

  x86_64_bionic_qt5_dev:
    environment:
      HOST: x86_64-pc-linux-gnu
      PACKAGES: "python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev libdb++-dev"
      CONFIG: "--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug --with-incompatible-bdb"
    docker:
      - image: umkoin/build-docker-primary:0.0.1
    working_directory: ~/umkoin
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Phase 0 (install required packages)
          command: apt-get install --no-install-recommends --no-upgrade -myqq ${PACKAGES}
      - run:
          name: Phase 1 (autogen)
          command: ./autogen.sh
      - run:
          name: Phase 2 (configure)
          command: ./configure ${CONFIG} --prefix=$(pwd)/depends/${HOST}
      - run:
          name: Phase 3 (build)
          command: make HOST=${HOST}

  x86_64_bionic_tsan:
    environment:
      HOST: x86_64-pc-linux-gnu
      PACKAGES: "clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev"
      CONFIG: "--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++"
    docker:
      - image: umkoin/build-docker-primary:0.0.1
    working_directory: ~/umkoin
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Phase 0 (install required packages)
          command: apt-get install --no-install-recommends --no-upgrade -myqq ${PACKAGES}
      - run:
          name: Phase 1 (autogen)
          command: ./autogen.sh
      - run:
          name: Phase 2 (configure)
          command: ./configure ${CONFIG} --prefix=$(pwd)/depends/${HOST}
      - run:
          name: Phase 3 (build)
          command: make HOST=${HOST}

  x86_64_bionic_asan:
    environment:
      HOST: x86_64-pc-linux-gnu
      PACKAGES: "clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev"
      CONFIG: "--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++"
    docker:
      - image: umkoin/build-docker-primary:0.0.1
    working_directory: ~/umkoin
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Phase 0 (install required packages)
          command: apt-get install --no-install-recommends --no-upgrade -myqq ${PACKAGES}
      - run:
          name: Phase 1 (autogen)
          command: ./autogen.sh
      - run:
          name: Phase 2 (configure)
          command: ./configure ${CONFIG} --prefix=$(pwd)/depends/${HOST}
      - run:
          name: Phase 3 (build)
          command: make HOST=${HOST}

  Win64:
    environment:
      HOST: x86_64-w64-mingw32
      PACKAGES: "nsis g++-mingw-w64-x86-64 wine-binfmt wine64"
      CONFIG: "--enable-reduce-exports --disable-gui-tests --with-incompatible-bdb"
    docker:
      - image: umkoin/build-docker-primary:0.0.1
    working_directory: ~/umkoin
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Phase 0 (install required packages)
          command: apt-get install --no-install-recommends --no-upgrade -myqq ${PACKAGES}
      - run:
          name: Phase 1 (autogen)
          command: ./autogen.sh
      - run:
          name: Phase 2 (configure)
          command: ./configure ${CONFIG} --prefix=$(pwd)/depends/${HOST}
      - run:
          name: Phase 3 (build)
          command: make HOST=${HOST}

workflows:
  version: 2
  Go_Live:
    jobs:
      - Setup_Build_Environment
      - x86_64_bionic_qt5_dev:
          requires:
            - Setup_Build_Environment
      - x86_64_bionic_tsan:
          requires:
            - Setup_Build_Environment
      - x86_64_bionic_asan:
          requires:
            - Setup_Build_Environment
      - Win64:
          requires:
            - Setup_Build_Environment
